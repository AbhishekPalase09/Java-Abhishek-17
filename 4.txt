//Abhishek Palase

public interface shape{
    double area(int b, int h);
    
}
class Rectangle implements shape{
    public double area(int b, int h){
    return b*h;
    }
}
class Triangle implements shape{
    public double area(int b, int h){
    return b*h*0.5;
    }
}
public class Area{
    public static void main(String[] args){
        Rectangle r = new Rectangle();
        Triangle t = new Triangle();
        System.out.println("Rectangle "+r.area(3,5));
        System.out.println("Triangle " +t.area(4,5));
    }
} 
    //Output: Rectangle 15.0
//            Triangle 10.0

---------------------------------------------------------------------------
//Abhishek Palase

public class Student{
    int roll;
    void setroll(int r){
        roll = r;
    }
    int getroll(){
        return roll;
    }
}
class Test extends Student{
    int sub1, sub2;
    void getmarks(){
        System.out.println("Subject 1 marks: "+sub1);
        System.out.println("Subject 2 marks: "+sub2);
    }
     void setmarks(int s1, int s2){
        sub1 = s1;
        sub2 = s2;
    }
}
interface sports{
    int smarks = 20;
    void set();
}
class Result extends Test implements sports{
    public void set(){
        System.out.println("Sports marks: "+smarks);
    }
    void display(){
    System.out.println("roll no.: "+getroll());
    getmarks();
    set();
    int total = smarks + sub1 + sub2;
    System.out.println("total marks: "+ total);
    }
}
public class Marks{
    public static void main(String[] ar){
        Result r1 = new Result();
        r1.setroll(17);
        r1.setmarks(65,75);
        r1.display();
    }
} 
    // Output:
    // roll no.: 17
    // Subject 1 marks: 65
    // Subject 2 marks: 75
    // Sports marks: 20
    // total marks: 160
--------------------------------------------------------------------------------------------
//Abhishek Palase

interface stack{
    int size = 5;
    void push(int element);
    int pop();
    void display();
    boolean overflow();
    boolean underflow();
}
class IntegerStack implements stack{
    int[] arr = new int[size];
    int top = -1;
    public void push(int element){
        if(overflow())
        System.out.println("Stack overflow..");
        else{
            arr[++top] = element;
            System.out.println(element+" pushed in stack");
        }
    }
    public int pop(){
        if(underflow()){
        System.out.println("stack underflow..");
        return -1;
        }
        else{
            int popped= arr[top--];
            System.out.println(popped + " popped from stack");
            return popped;
        }
    }
    public void display(){
        for(int i=0; i<=top; i++)
        System.out.println(arr[i] +"");
    }
    public boolean overflow(){
        return top == size -1;
    }
     public boolean underflow(){
        return top == -1;
    }
}
public class test{
    public static void main(String[] args) {
		IntegerStack i1 = new IntegerStack();
		i1.push(10);
		i1.push(20);
		i1.display();
		i1.pop();
		i1.display();
	}
}
// 10 pushed in stack
// 20 pushed in stack
// 10
// 20
// 20 popped from stack
// 10